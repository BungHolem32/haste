// Generated by dts-bundle v0.7.3

export { AbstractHastePackage, HasteRowItem, GoDispatcher, Haste };

export default class AbstractHastePackage {
    protected packageData: object;
    protected packageName: string;
    protected haste: any;
    protected icon: string;
    constructor();
    getPackageName(): string;
    insert(value: any, description?: string, path?: string, icon?: string): void;
    search(value: string, callback: Function): void;
    activate(rowItem: HasteRowItem, callback: Function): void;
}

export default class HasteRowItem {
    db: string | undefined;
    description: string | undefined;
    icon: string | undefined;
    packageName: string | undefined;
    path: string | undefined;
    title: string | undefined;
    count: number | undefined;
    unixTime?: string | undefined;
    constructor();
}

export default class GoDispatcher {
    static listening: boolean;
    static startListen(): void;
    static send(packet: any): Promise<{}>;
    static close(): void;
}

export default class Haste {
    constructor(packageName: string, db?: string);
    pasteText(): this;
    addCollection(): this;
    updateCalled(item: any): this;
    multipleInsert(itemList: any): this;
    insert(item: HasteRowItem, persist?: boolean): this;
    getKey(value: string): this;
    getExecList(): this;
    fuzzySearch(value: string): this;
    orderBy(field: string): this;
    asc(): this;
    desc(): this;
    go(): Promise<{}>;
    mouse(): {
        up(): void;
        down(): void;
        left(): void;
        right(): void;
    };
}

